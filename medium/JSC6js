/**
 * @param {number[]} nums
 * @param {Function} fn
 * @param {number} init
 * @return {number}
 */


 //more performance than .filter().map()
var reduce = function(nums, fn, init) {
    let temp = init;

    //for...of i.e. element of arr.  works for iterable objects
    //arr.forEach(element)=>{accumulator = fn(accumulator,element)}); works too
    for(let i = 0; i < nums.length; i++){
        temp = fn(temp,nums[i]);
    }
    return temp;
};